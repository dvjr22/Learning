#Simple math
2+2
2/9
2*7
78-63
log(2)
log10(2)
#Ask for help
#Use ?thingIneedHelpWith
?boxplot
#Alternatively
#help(thingIneedHelpWith)
help(boxplot)
#help("thingIneedHelpWith")
help("box")
#example from boxplot desc
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
#Sample data InsectSprays
?InsectSprays
#For more help go to R news group - www.r-project.org
setwd(file = "/home/valdeslab/Learning/LearningR")
#Load a package
library(MASS)
?glmmPQL
#Install a package - can also be done with the Install icon
#install.packages("packageToInstall")
install.packages("gstat")
library(gstat)
#Set working directory for default saving
setwd("/home/valdeslab/Learning/LearningR/")
#Clear all variables
rm(list = ls(all = TRUE))
#Quit R
q(save = "yes")
setwd("/home/diego/Learning/LearningR")
NAs. What is the average length of the seven animals?
Len = c(75, 85, 91.6, 95, NA, 105.5, 106)
Tb = c(0, 0, 1, NA, 0, 0, 0)
?mean
AvgLen = mean(Len, na.rm = TRUE)
#ex 2
#We continue with the deer from Exercise 1. First create variables Farm and
#Month that contain the relevant information. Note that Farm is a string of
#characters. Use the cbind command to combine month, length, and Tb data,
#and store the results in the variable, Boar. Make sure that you can extract rows,
#columns, and elements of Boar. Use the dim, nrow, and ncol functions to
#determine the number of animals and variables in Boar.
Farm = c("MO", "MO", "MO", "MO", "LN", "SE", "QM")
Month = c(11, 07, 07, NA, 09, 09, 11)
Boar = cbind(Month, Len, Tb)
Boar
nrow(Boar)
ncol(Boar)
Boar$Farm
Boar$Month
Boar$Tb
Boar[ , 1]
Boar[ , 2]
Boar[ , 3]
Tb2 = vector(0, 0, 1, NA, 0, 0, 0)
?vector
Tb2 = vector(length = 7)
Tb2 = Tb
Tb2
Tb
Tb2
Tb
is.vector(Tb2)
is.vector(Tb)
Tb = c(0, 0, 1, NA, 0, 0, 0)
is.vector(Tb)
?cbind
cbind(1,2,3,4,5,6)
test = cbind(1,2,3,4,5,6,7,8)
test
is.vector(test)
c(1,2,3,4,5,6)
test = c(1,2,3,,5)
test = c(1,2,3,4,5)
test
is.vector(test)
rm(Tb2)
Tb2
Tb2 = Tb
Tb2
Tb2 = vector(length = 7)
Tb2[1] = 0
Tb2[2] = 0 # ... Tb[7] = 0
Tb2 = Tb #This is better, or...
Tb2 = c(0, 0, 1, NA, 0, 0, 0)
Tb2
Tb
is.vector(Tb2)
is.vector(Tb)
00
Mat = matrix(nrow = 3, ncol = 3)
Mat[1, ] = c(1,2,3)
Mat[2, ] = c(4,2,1)
Mat[3, ] = c(2,3,0)
Mat
?t
#Transpose
t(Mat)
#Inverse
solve(Mat)
?solve
ginv(Mat)
library(MASS)
ginv(Mat)
Mat
#Inverse
ginv(Mat)
diag(3)
diag(Mat)
#Inverse
MatInv = ginv(Mat)
Mat * MatInv
Farm = c("MO", "MO", "MO", "MO", "LN", "SE", "QM")
Month = c(11, 07, 07, NA, 09, 09, 11)
Year = c(00,00,01,NA,03,03,02)
Sex = c(1,2,2,2,1,2,2)
LenClass = rep(1, each = 7)
LenCt = c(75, 85, 91.6, 95, NA, 105.5, 106)
Ecervi = rep(0, each = 7)
Ecervi[4] = NA
Tb = c(0, 0, 1, NA, 0, 0, 0)
LenClass
Ecervi
Tb
is.vector(LenClass)
Boar.DF = data.frame(Farm = Farm, Month = Month, Year = Year, Sex = Sex, LenClass = LenClass, LenCt = LenCt, Ecervi = Ecervi, Tb = Tb)
Boar.DF
SqrLen = sqrt(LenCt)
Boar.DF$SqrLen = SqrLen
Boar.DF
#List
Boar.List = list(Farm = Farm, Month = Month, Year = Year, Sex = Sex, LenClass = LenClass, LenCt = LenCt, Ecervi = Ecervi, Tb = T, SqrLen = SqrLen)
Boar.List
#Access
Boar.DF$Farm
Boar.List$Farm
Test = read.table(file = "RBook/ISIT.xls", header = TRUE)
Test = read.table(file = "LearningR/RBook/ISIT.xls", header = TRUE)
setwd("/home/diego/Learning/LearningR")
Test = read.table(file = "RBook/ISIT.xls", header = TRUE)
Test = read.table(file = "RBook/ISIT.txt", header = TRUE)
Test
Test = read.table(file = "RBook/ISIT.txt", header = TRUE)
is.data.frame(Test)
rm(Test)
rm(Test)
Isit.dataframe = read.table(file = "RBook/ISIT.txt", header = TRUE)
?scan
Isit.test = scan(file = "RBook/ISIT.txt")
Isit.test = scan(file = "RBook/ISIT.txt", skip = 1)
Isit.test
is.data.frame(Isit.test)
is.vector(Isit.test)
rm(Isit.dataframe)
rm(Isit.test)
test = try(system("ls", intern = TRUE))
test
is.vector(test)
rm(test)
Isit.dataframe = read.table(file = "RBook/ISIT.txt", header = TRUE)
Isit.vector = scan(file = "RBook/ISIT.txt", skip = 1)
is.data.frame(Isit.dataframe)
is.data.frame(Isit.vector)
is.matrix(Isit.dataframe)
is.matrix(Isit.vector)
is.vector(Isit.dataframe)
is.vector(Isit.vector)
#ex7
Deer.dataframe = read.table(file = "RBook/Deer.txt", header = TRUE)
Deer.dataframe
Test = read.table(file = "RBook/squid.txt", header = TRUE)
#setwd("/home/diego/Learning/LearningR")
Squid = read.table(file = "RBook/squid.txt", header = TRUE)
rm(Test)
Squid
names(Squid)
str(Squid)
str(Bad.Squid)
Bad.Squid = read.table(file = "RBook/squidGSI.txt", dec = ",")
str(Bad.Squid)
GSI
#Exampl lm assignment
M1 = lm(GSI ~ factor(Location) + factor(Year), data = Squid)
boxplot(GSI ~ factor(Location), data = Squid)
Squid$GSI
Squid[ , 6]
mean(Squid$GSI)
mean(Squid[ , 6])
Squid[ , "GSI"]
#attach()
attach(Squid)
names(Squid)
rm(Month)
rm(Year)
rm(Sex)
#attach()
#rm(BoarData)
#rm(Month)
#rm(Year)
#rm(Sex)
attach(Squid)
GSI
GSI
Year
names(Squid)
Location
names(Squid)
#attach()
#rm(BoarData)
#rm(Month)
#rm(Year)
#rm(Sex)
attach(Squid)
rm(Squid)
GSI
#setwd("/home/diego/Learning/LearningR")
Squid = read.table(file = "RBook/squid.txt", header = TRUE)
#attach()
#rm(BoarData)
#rm(Month)
#rm(Year)
#rm(Sex)
attach(Squid)
rm(GSI)
boxplot(GSI)
mean(GSI)
detach(Squid)
GSI
detach(Squid)
GSI
detach(Squid) #remove variable access
detach(Squid) #remove variable access
detach(Squid) #remove variable access
GSI
#Subsets
Squid$Sex
unique(Squid$Sex)
#1 = male, 2 = female
#access male data
Se1 = Squid$Sex == 1
#1 = male, 2 = female
#access male data
Sel = Squid$Sex == 1
rm(Sel)
SquidM = Squid[Sel, ]
#1 = male, 2 = female
#access male data
Sel = Squid$Sex == 1
SquidM = Squid[Sel, ]
SquidM
SquidM = Squid[Squid$Sex ==1, ]
SquidM
#access female data
SquidF = Squid[Squid$Sex == 2, ]
SquidF
unique(Squid$Location)
#Extract data for 1, 2, 3
Squid123 = Squid[Squid$Location == 1 | Squid$Location == 2 | Squid$Location == 3, ]
Squid123
Squid123 = Squid[Squid$Location != 4, ]
Squid123 = Squid[Squid$Location < 4, ]
Squid123 = Squid[Squid$Location <= 3, ]
Squid123 = Squid[Squid$Location >= 1 & Squid$Location <= 3, ]
SquidM.1 = Squid[Squid$Location == 1 & Squid$Sex ==1, ]
SquidM.1
SquidM.12 = Squid[(Squid$Location == 1 | Squid$Location == 2) & Squid$Sex ==1, ]
Squid[Squid$Location ==1 & Squid$Year == 4 & Squid$Month == 1, ]
Ord1 = order(Squid$Month)
Ord1
Squid[Ord1, ]
#Can use for one var
Squid$GSI[Ord1]
Squid[order(Squid$Month), ]
#merge()
Sq1 = read.table(file = "RBook/squid1.txt", header = TRUE)
Sq2 = read.table(file = "RBook/squid2.txt", header = TRUE)
SquidMerged = merge(Sq1, Sq2, by = "Sample")
SquidMerged
SquidMerged = merge(Sq1, Sq2, by = "Sample", all = TRUE) #NA values are filled
SquidMerged
Sq1
Sq1[4,]
Sq2[4,]
test = c(1,2,3,4,5,6)
Sq1[test, ]
Sq2[test, ]
RowCheck = seq(from = 1, to = 6, by = 1)
Sq1[RowCheck, ]
Sq2[RowCheck, ]
#Exporting data
SquidM
write.table(SquidM, file = "MaleSquid.txt", sep = " ", quote = FALSE, append = FALSE, na = "NA")
write.table(SquidM1, file = "MaleSquid1.txt", sep = ",", quote = TRUE, append = FALSE, na = "NA")
write.table(SquidM, file = "MaleSquid1.txt", sep = ",", quote = TRUE, append = FALSE, na = "NA")
#Recoding categorical variables
str(Squid)
Squid$fSex = factor(Squid$Location)
Squid$fSex = factor(Squid$Sex)
Squid$fLocation = factor(Squid$Location)
Squid$fSex
Squid$fSex = factor(Squid$Sex, levels = c(1,2), labels = c("M", "F"))
Squid$fSex
#Allows for use in functions as lm or boxplot
boxplot(GSI ~ fSex, data = Squid)
M1 = lm(GSI ~ fSex + fLocation, data = Squid)
summary(M1)
M2 = lm(GSI ~ factor(Sex) + factor(Location), data = Squid)
summary(M2)
summary(M1)
summary(M2)
Squid$fLocation
#Change order of the levels
Squid$fLocation = factor(Squid$Location, levels = c(2,3,1,4))
Squid$fLocation
boxplot(GSI ~ fLocation, data = Squid)
boxplot(GSI ~ fLocation, data = Squid)
#Allows for use in functions as lm or boxplot
boxplot(GSI ~ fSex, data = Squid) #Use in boxplot
SquidMTest = Squid[Squid$fSex == "1", ] # is = Squid = Squid[Squid$Sex == 1, ]
SquidMTest = Squid[Squid$fSex == 1, ] # is = Squid = Squid[Squid$Sex == 1, ]
SquidMTest = Squid[Squid$fSex == 1 ] # is = Squid = Squid[Squid$Sex == 1, ]
SquidMTest = Squid[Squid$fSex == 1, ] # is = Squid = Squid[Squid$Sex == 1, ]
SquidMTest = Squid[Squid$fSex == "1", ] # is = Squid = Squid[Squid$Sex == 1, ]
Squid$fSex
SquidMTest = Squid[Squid$fSex == "M", ] # is = Squid = Squid[Squid$Sex == 1, ]
SquidMTest
SquidM
SquidMTest[c(1,2,3), ]
SquidM[c(1,2,3)]
SquidMTest[c(1,2,3), ]
SquidM[c(1,2,3), ]
str(Squid)
#(www.who.int/en/) and reproduced for educational purposes. Prepare the
#spreadsheet and import these data into R. If you are a non-Windows user,
#start with the file BirdFlu.txt. Note that you will need to adjust the column
#names and some of the country names.
#Use the names and str command in R to view the data. Print the number of
#bird flu cases in 2003. What is the total number of bird flu cases in 2003 and in
#2005? Which country has had the most cases? Which country has had the least
#bird flu deaths?
#Using methods from Chapter 2, what is the total number of bird flu cases per
#country? What is the total number of cases per year?
BirdFlu = read.table(file = "RBook/BirdFluCases.txt", header = TRUE)
#(www.who.int/en/) and reproduced for educational purposes. Prepare the
#spreadsheet and import these data into R. If you are a non-Windows user,
#start with the file BirdFlu.txt. Note that you will need to adjust the column
#names and some of the country names.
#Use the names and str command in R to view the data. Print the number of
#bird flu cases in 2003. What is the total number of bird flu cases in 2003 and in
#2005? Which country has had the most cases? Which country has had the least
#bird flu deaths?
#Using methods from Chapter 2, what is the total number of bird flu cases per
#country? What is the total number of cases per year?
BirdFlu = read.table(file = "RBook/BirdFluCases.txt", header = TRUE)
?read.table
names(BirdFlu)
str(BirdFlu)
BirdFlu0305 = BirdFlu[Year == 2003 | Year == 2005, ]
BirdFlu0305 = BirdFlu[BridFlu$Year == 2003 | BirdFlu$Year == 2005, ]
BirdFlu0305 = BirdFlu[BirdFlu$Year == 2003 | BirdFlu$Year == 2005, ]
BirdFlu0305
sum(BirdFlu0305[1,])
sum(BirdFlu0305[1,] - 2003)
Flu03 = sum(BirdFlu0305[1,]) - 2003
Flu03
Flu05 = sum(BirdFlu0305[2, ]) - 2005
Flu05
FluCases0305 = Flu03 + Flu05
FluCases0305
colSums(BirdFlu[ , -1])
max(colSums(BirdFlu[ , -1]))
?max
colnames(BirdFlu)
colnames(BirdFlu)[max(colSums(BirdFlu[ , -1]))]
colnames(BirdFlu)[max.col(BirdFlu)]
colnames(BirdFlu)[max.col(BirdFlu[, -1])]
colSums(BirdFlu[ , -1])
max(colSums(BirdFlu[ , -1]))
TotalCases = colSums(BirdFlu[ , -1])
max(TotalCases)
TotalCases
colnames(TotalCases)[apply(totalCases,1,which.max)]
colnames(TotalCases)[apply(TotalCases,1,which.max)]
?apply
is.vector(TotalCases)
colnames(TotalCases)[apply(TotalCases,0,which.max)]
which.max(TotalCases)
TotalCases
which.min(TotalCases)
rowSums(BirdFlu[ ,-1])
BirdFlu
rowSums(BirdFlu[ ,-1])[1]
Cases03 = rowSums(BirdFlu[ ,-1])[1]
Cases04 = rowSums(BirdFlu[ ,-1])[2]
Cases05 = rowSums(BirdFlu[ ,-1])[3]
Cases06 = rowSums(BirdFlu[ ,-1])[4]
Cases07 = rowSums(BirdFlu[ ,-1])[5]
Cases08 = rowSums(BirdFlu[ ,-1])[6]
Flu03
