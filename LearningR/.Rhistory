#Simple math
2+2
2/9
2*7
78-63
log(2)
log10(2)
#Ask for help
#Use ?thingIneedHelpWith
?boxplot
#Alternatively
#help(thingIneedHelpWith)
help(boxplot)
#help("thingIneedHelpWith")
help("box")
#example from boxplot desc
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
#Sample data InsectSprays
?InsectSprays
#For more help go to R news group - www.r-project.org
setwd(file = "/home/valdeslab/Learning/LearningR")
#Load a package
library(MASS)
?glmmPQL
#Install a package - can also be done with the Install icon
#install.packages("packageToInstall")
install.packages("gstat")
library(gstat)
#Set working directory for default saving
setwd("/home/valdeslab/Learning/LearningR/")
#Clear all variables
rm(list = ls(all = TRUE))
#Quit R
q(save = "yes")
Isit.dataframe = read.table(file = "RBook/ISIT.txt", header = TRUE) #Read using read.table
setwd("/home/diego/Learning/LearningR")
Isit.dataframe = read.table(file = "RBook/ISIT.txt", header = TRUE) #Read using read.table
Isit.dataframe
names(Isit.dataframe)
str(Isit.dataframe)
IsitStation1 = Isit.dataframe[Isit.dataframe$Station == 1, ]
str(IsitStation1)
Station1Depth = Isit.dataframe$SampleDepth
?min
max(Station1Depth)
max(Station1Depth, na.rm = FALSE)
min(Station1Depth, na.rm = FALSE)
max(Isit.dataframe$SampleDepth, na.rm = TRUE)
min(Isit.dataframe$SampleDepth, na.rm = TRUE)
Station1Depth = IsitStation1$SampleDepth
max(Station1Depth, na.rm = TRUE)
max(Isit.dataframe$SampleDepth, na.rm = TRUE)
min(Station1Depth, na.rm = TRUE)
min(Isit.dataframe$SampleDepth, na.rm = TRUE)
tation1Depth = IsitStation1$SampleDepth #Get SampleDepth column
max(Station1Depth, na.rm = TRUE) #
max(IsitStation1$SampleDepth, na.rm = TRUE)
min(Station1Depth, na.rm = TRUE)
min(IsitStation1$SampleDepth, na.rm = TRUE)
?mean
?median
mean(IsitStation1$SampleDepth, na.rm = TRUE)
median(IsitStation1$SampleDepth, na.rm = TRUE)
#Station 2
IsitStation2 = Isit.dataframe[Isit.dataframe$Station ==2, ]
Station2Depth = IsitStation2$SampleDepth
#Station 2
IsitStation2 = Isit.dataframe[Isit.dataframe$Station ==2, ]
Station2Depth = IsitStation2$SampleDepth
max(Station2Depth, na.rm = TRUE)
min(Station2Depth, na.rm = TRUE)
mean(Station2Depth, na.rm = TRUE)
median(Station2Depth, na.rm = TRUE)
#Station 3
IsitStation3 = Isit.dataframe[Isit.dataframe$Station == 3, ]
Station3Depth = IsitStation3$SampleDepth
max(Station3Depth, na.rm = TRUE)
min(Station3Depth, na.rm = TRUE)
mean(Station3Depth, na.rm = TRUE)
median(Station3Depth, na.rm = TRUE)
unique(Isit.dataframe$Station)
str(Isit.dataframe)
unique(Isit.dataframe$Station) #Display number of stations
StationObservations = table(Isit.dataframe$Station)
StationObservations
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe != 4 | Isit.dataframe != 5, ]
str(Isit.New.df)
str(Isit.dataframe)
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station != 4 | Isit.dataframe$Station != 5, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
str(Isit.dataframe)
rm(Isit.New.df)
str(Isit.dataframe)
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station != 4 | Isit.dataframe$Station != 5, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
str(Isit.dataframe)
#setwd("/home/diego/Learning/LearningR")
Isit.dataframe = read.table(file = "RBook/ISIT.txt", header = TRUE) #Read using read.table
names(Isit.dataframe) #Column names
str(Isit.dataframe) #Structure of data
str(IsitStation1) #Structure of data, 38 observations
StationObservations = table(Isit.dataframe$Station) #Number of times each station appears
StationObservations
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station != 4, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station != 4 | Isit.dataframe$Station != 5, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station >= 4 & Isit.dataframe$Station <= 5, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station >= 4 | Isit.dataframe$Station <= 5, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station != 4 | Isit.dataframe$Station != 5, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
str(Isit.dataframe)
#Station 4 and 5 appear < 20 and will be excluded
Isit.New.df = Isit.dataframe[Isit.dataframe$Station != 4 & Isit.dataframe$Station != 5, ] #New dataframe with 4 and 5 excluded
str(Isit.New.df)
unique(Isit.New.df)
unique(Isit.New.df$Station)
str(Isit.New.df)
#Extract 2002
Isit.2002.df = Isit.dataframe[Isit.dataframe$Year == 2002, ]
unique(Isit.2002.df$Year)
#Extract April - 4
Isit.Aprl.df = Isit.dataframe[Isit.dataframe$Month == 4, ]
unique(Isit.Aprl.df)
unique(Isit.Aprl.df$Month)
#Extract > 2000
Isit.GT.2000Depth = Isit.dataframe[Isit.dataframe$SampleDepth > 2000, ]
#Order by depth
DepthOrder = order(Isit.GT.2000Depth)
DepthOrder
#Order by depth
DepthOrder = order(Isit.GT.2000Depth$SampleDepth)
DepthOrder
Isit.GT.2000Depth
Isit.GT.2000Depth$SampleDepth
max(Isit.GT.2000Depth$SampleDepth)
min(Isit.GT.2000Depth$SampleDepth)
#Order by depth
DepthOrder = order(Isit.GT.2000Depth$SampleDepth)
max(DepthOrder)
DepthOrder
order()
?order
Depth = Isit.GT.2000Depth$SampleDepth
Depth
#Order by depth
DepthOrder = order(Depth)
DepthOrder
Isit.GT.2000Depth$SampleDepth[DepthOrder]
#Order by depth
DepthOrder = order(Isit.GT.2000Depth$SampleDepth)
Isit.GT.2000Depth$SampleDepth[DepthOrder]
DepthOrder
Isit.GT.2000Depth[DepthOrder, ]
Isit.GT.2000Depth$SampleDepth[DepthOrder]
DepthOrder
#In April
Isit.GT.2000Depth[Isit.GT.2000Depth$Month == 4, ]
#In April
Isit.GT.2000.Depth.April = Isit.GT.2000Depth[Isit.GT.2000Depth$Month == 4, ]
Isit.GT.2000.Depth.April
unique(Isit.GT.2000.Depth.April)
unique(Isit.GT.2000.Depth.April$Month)
write.table(Isit.GT.2000.Depth.April, file = "April_2000_depth.txt", sep = " ", quote = FALSE, append = FALSE, na = "NA")
Isit.dataframe$fMonth = factor(Isit.dataframe$Month)
Isit.dataframe$fYear = factor(Isit.dataframe$Year)
#setwd("/home/diego/Learning/LearningR")
Veg = read.table(file = "RBook/Vegetation2.txt", header = TRUE)
names(Veg)
?count
str(Veg)
#Mean per Transect
m = mean(Veg$R)
m1 = mean(Veg$R[Veg$Transect == 1])
m2 = mean(Veg$R[Veg$Transect == 2])
m3 = mean(Veg$R[Veg$Transect == 3])
m1 = mean(Veg$R[Veg$Transect == 1])
m2 = mean(Veg$R[Veg$Transect == 2])
m3 = mean(Veg$R[Veg$Transect == 3])
m4 = mean(Veg$R[Veg$Transect == 4])
m5 = mean(Veg$R[Veg$Transect == 5])
m6 = mean(Veg$R[Veg$Transect == 6])
m7 = mean(Veg$R[Veg$Transect == 7])
m8 = mean(Veg$R[Veg$Transect == 8])
m3
Veg$R[Veg$Transect == 1]
c(m, m1, m2, m3, m4, m5, m6, m7, m8)
#Calculate more efficietly
tapply(Veg$R, Veg$Transect, mean)
Me = tapply(Veg$R, Veg$Transect, mean) #tapply(X = Veg$R, INDEX = Veg$Trnsect, FUN = mean)
Sd = tapply(Veg$R, Veg$Transect, sd)
Le = taplly(Veg$R, Veg$Transect, length)
cbind(Me, Sd, Le)
#Splits data of 1st var based on levels of 2nd var and applies the specified function
Me = tapply(Veg$R, Veg$Transect, mean) #tapply(X = Veg$R, INDEX = Veg$Trnsect, FUN = mean)
Sd = tapply(Veg$R, Veg$Transect, sd)
Le = tapply(Veg$R, Veg$Transect, length)
cbind(Me, Sd, Le)
#sapply
sapply(Veg[, 5:9], FUN = mean)
mean(Veg$R)
mean(Veg$R)
mean(Veg$ROCK)
mean(Veg$LITTER)
mean(Veg$ML)
mean(Veg$BARESOIL)
#lapply()
lapply(Veg[, 5:9], FUN = mean)
#sapply()
sapply(Veg[, 5:9], FUN = mean) #Mean of columns 5 - 9
#Can adust the format of the output
#vector
VegVector = sapply(cbind(Veg$R, Veg$ROCK, Veg$LITTER, Veg$ML, Veg$BARESOIL), FUN = mean)
VegVec
VegVector
#data.frame
Veg.dataframe = sapply(data.frame(cbind(Veg$R, Veg$ROCK, Veg$LITTER, Veg$ML, Veg$BARESOIL), FUN = mean))
#data.frame
Veg.dataframe = sapply(data.frame(cbind(Veg$R, Veg$ROCK, Veg$LITTER, Veg$ML, Veg$BARESOIL)), FUN = mean)
Veg.dataframe
#sapply()
sapply(Veg[, 5:9], FUN = mean) #Mean of columns 5 - 9
Veg.dataframe2 = sapply(Veg[, 5:9], FUN = mean)
Veg.dataframe2
is.data.frame(Veg.dataframe)
is.data.frame(Veg.dataframe2)
Dfrm = data.frame(sapply(Veg[, 5:9], FUN = mean))
is.data.frame(Dfrm)
Dfrm
Veg.dataframe2 #
#sapply()
sapply(Veg[, 5:9], FUN = mean) #Mean of columns 5 - 9
Dfrm
nrow(Dfrm)
t(Dfrm)
Dfrm = t(Dfrm)
Dfrm
#setwd("/home/diego/Learning/LearningR")
Temp.dataframe = read.table(file = "RBook/Temperature.xls", header = TRUE) #Read using read.table
#setwd("/home/diego/Learning/LearningR")
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE) #Read using read.table
names(Temp.dataframe)
str(Temp.dataframe)
?read.table
#setwd("/home/diego/Learning/LearningR")
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE, sep = ",") #Read using read.table
names(Temp.dataframe)
?read.csv
Temp.csv.df = read.csv(file = "RBook/Temperature.csv", header = TRUE, sep = ",")
names(Temp.csv.df)
str(Temp.dataframe)
str(Temp.csv.df)
Avgs = tapply(Temp.dataframe$Station, Temp.dataframe$Month)
Avgs
Me
?tapply
Avgs = tapply(Temp.dataframe$Station, c(Temp.dataframe$Salinity, Temp.dataframe$Month))
Avgs = tapply(Temp.dataframe$Station, Temp.dataframe$Month)
Avgs
unique(Temp.dataframe$Station)
unique(Temp.dataframe$Month)
tapply(Temp.dataframe$Month, Temp.dataframe$Salinity, mean)
tapply(Temp.dataframe$Salinity, Temp.dataframe$Month, mean)
mean(Temp.dataframe[Temp.dataframe$Month == 1], na.rm = TRUE)
mean(Temp.dataframe$Salinity[Temp.dataframe$Month == 1], na.rm = TRUE)
tapply(Temp.dataframe$Salinity, Temp.dataframe$Month, mean, na.rm = TRUE)
mean(Temp.dataframe[Temp.dataframe])
tapply(Temp.dataframe$Salinity, Temp.dataframe$Year, mean, na.rm = TRUE) #Ave Salinity per month for all years
tapply(Temp.dataframe$Salinity, c(Temp.dataframe$Month, Temp.dataframe$Year)Temp.dataframe$Month, mean, na.rm = TRUE) #Ave Salinity per month for all years
tapply(Temp.dataframe$Salinity, c(Temp.dataframe$Month, Temp.dataframe$Year), mean, na.rm = TRUE) #Ave Salinity per month for all years
rm(Temp.csv.df)
Answer = matrix(nrow = 16, ncol = 12)
Temp90 = Temp.dataframe[Temp.dataframe$Year == 1990, ]
Temp91 = Temp.dataframe[Temp.dataframe$Year == 1991, ]
Temp92 = Temp.dataframe[Temp.dataframe$Year == 1992, ]
Temp93 = Temp.dataframe[Temp.dataframe$Year == 1993, ]
Temp95 = Temp.dataframe[Temp.dataframe$Year == 1995, ]
Temp96 = Temp.dataframe[Temp.dataframe$Year == 1996, ]
Temp97 = Temp.dataframe[Temp.dataframe$Year == 1997, ]
Temp98 = Temp.dataframe[Temp.dataframe$Year == 1998, ]
Temp99 = Temp.dataframe[Temp.dataframe$Year == 1999, ]
Temp99 = Temp.dataframe[Temp.dataframe$Year == 1999, ]
Temp00 = Temp.dataframe[Temp.dataframe$Year == 2000, ]
Temp01 = Temp.dataframe[Temp.dataframe$Year == 2001, ]
Temp02 = Temp.dataframe[Temp.dataframe$Year == 2002, ]
Temp03 = Temp.dataframe[Temp.dataframe$Year == 2003, ]
Temp04 = Temp.dataframe[Temp.dataframe$Year == 2004, ]
Temp05 = Temp.dataframe[Temp.dataframe$Year == 2005, ]
tapply(Temp90$Temperature, Temp90$Month, mean, na.rm = TRUE) #Ave for all years
Answer[1, ] = tapply(Temp90$Temperature, Temp90$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer
Answer[1, ] = tapply(Temp90$Temperature, Temp90$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[1, ] = tapply(Temp90$Temperature, Temp90$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[1, ] = tapply(Temp90$Temperature, Temp90$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[1, ] = tapply(Temp90$Temperature, Temp90$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[2, ] = tapply(Temp91$Temperature, Temp91$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[3, ] = tapply(Temp92$Temperature, Temp92$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[4, ] = tapply(Temp93$Temperature, Temp93$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[5, ] = tapply(Temp94$Temperature, Temp94$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[6, ] = tapply(Temp95$Temperature, Temp95$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[7, ] = tapply(Temp96$Temperature, Temp96$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[8, ] = tapply(Temp97$Temperature, Temp97$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[9, ] = tapply(Temp98$Temperature, Temp98$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[10, ] = tapply(Temp99$Temperature, Temp99$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[11, ] = tapply(Temp00$Temperature, Temp00$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[12, ] = tapply(Temp01$Temperature, Temp01$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[13, ] = tapply(Temp02$Temperature, Temp02$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[14, ] = tapply(Temp03$Temperature, Temp03$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[15, ] = tapply(Temp04$Temperature, Temp04$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer[16, ] = tapply(Temp05$Temperature, Temp05$Month, mean, na.rm = TRUE) #Ave for each month in the year
Temp94 = Temp.dataframe[Temp.dataframe$Year == 1994, ]
Temp94 = Temp.dataframe[Temp.dataframe$Year == 1994, ]
Answer[5, ] = tapply(Temp94$Temperature, Temp94$Month, mean, na.rm = TRUE) #Ave for each month in the year
Answer
colnames(Answer) c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
colnames(Answer) = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
Answer
rownames(Answer) = seq(from = 1990, to = 2005, by = 1)
Answer
AnswerTemp = matrix(nrow = 16, ncol = 12) #Answer to store results
colnames(Answer) = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec") #Name cols
rownames(Answer) = seq(from = 1990, to = 2005, by = 1) #Name rows
#Get the data for each year
Temp90 = Temp.dataframe[Temp.dataframe$Year == 1990, ]
Temp91 = Temp.dataframe[Temp.dataframe$Year == 1991, ]
Temp92 = Temp.dataframe[Temp.dataframe$Year == 1992, ]
Temp93 = Temp.dataframe[Temp.dataframe$Year == 1993, ]
Temp94 = Temp.dataframe[Temp.dataframe$Year == 1994, ]
Temp95 = Temp.dataframe[Temp.dataframe$Year == 1995, ]
Temp96 = Temp.dataframe[Temp.dataframe$Year == 1996, ]
Temp97 = Temp.dataframe[Temp.dataframe$Year == 1997, ]
Temp98 = Temp.dataframe[Temp.dataframe$Year == 1998, ]
Temp99 = Temp.dataframe[Temp.dataframe$Year == 1999, ]
Temp00 = Temp.dataframe[Temp.dataframe$Year == 2000, ]
Temp01 = Temp.dataframe[Temp.dataframe$Year == 2001, ]
Temp02 = Temp.dataframe[Temp.dataframe$Year == 2002, ]
Temp03 = Temp.dataframe[Temp.dataframe$Year == 2003, ]
Temp04 = Temp.dataframe[Temp.dataframe$Year == 2004, ]
Temp05 = Temp.dataframe[Temp.dataframe$Year == 2005, ]
#Avg Temp from all stations by month for given year
#Place results in the matrix
AnswerTemp[1, ] = tapply(Temp90$Temperature, Temp90$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[2, ] = tapply(Temp91$Temperature, Temp91$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[3, ] = tapply(Temp92$Temperature, Temp92$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[4, ] = tapply(Temp93$Temperature, Temp93$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[5, ] = tapply(Temp94$Temperature, Temp94$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[6, ] = tapply(Temp95$Temperature, Temp95$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[7, ] = tapply(Temp96$Temperature, Temp96$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[8, ] = tapply(Temp97$Temperature, Temp97$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[9, ] = tapply(Temp98$Temperature, Temp98$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[10, ] = tapply(Temp99$Temperature, Temp99$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[11, ] = tapply(Temp00$Temperature, Temp00$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[12, ] = tapply(Temp01$Temperature, Temp01$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[13, ] = tapply(Temp02$Temperature, Temp02$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[14, ] = tapply(Temp03$Temperature, Temp03$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[15, ] = tapply(Temp04$Temperature, Temp04$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp[16, ] = tapply(Temp05$Temperature, Temp05$Month, mean, na.rm = TRUE) #Ave for each month in the year
AnswerTemp #Display
rownames(AnswerTemp) = seq(from = 1990, to = 2005, by = 1) #Name rows
colnames(AnswerTemp) = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec") #Name cols
AnswerTemp #Display
AnswerSd = matrix(nrow = 16, ncol = 12) #Answer to store results
colnames(AnswerTemp) = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec") #Name cols
rownames(AnswerTemp) = seq(from = 1990, to = 2005, by = 1) #Name rows
AnswerSd = matrix(nrow = 16, ncol = 12) #Answer to store results
colnames(AnswerSd) = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec") #Name cols
rownames(AnswerSd) = seq(from = 1990, to = 2005, by = 1) #Name rows
#Stanandard deviation from all stations by month for given year
#Place results in the matrix
AnswerSd[1, ] = tapply(Temp90$Temperature, Temp90$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[2, ] = tapply(Temp91$Temperature, Temp91$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[3, ] = tapply(Temp92$Temperature, Temp92$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[4, ] = tapply(Temp93$Temperature, Temp93$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[5, ] = tapply(Temp94$Temperature, Temp94$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[6, ] = tapply(Temp95$Temperature, Temp95$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[7, ] = tapply(Temp96$Temperature, Temp96$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[8, ] = tapply(Temp97$Temperature, Temp97$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[9, ] = tapply(Temp98$Temperature, Temp98$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[10, ] = tapply(Temp99$Temperature, Temp99$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[11, ] = tapply(Temp00$Temperature, Temp00$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[12, ] = tapply(Temp01$Temperature, Temp01$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[13, ] = tapply(Temp02$Temperature, Temp02$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[14, ] = tapply(Temp03$Temperature, Temp03$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[15, ] = tapply(Temp04$Temperature, Temp04$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd[16, ] = tapply(Temp05$Temperature, Temp05$Month, sd, na.rm = TRUE) #Ave for each month in the year
AnswerSd
AnswerLen = matrix(nrow = 16, ncol = 12) #Answer to store results
colnames(AnswerLen) = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec") #Name cols
rownames(AnswerLen) = seq(from = 1990, to = 2005, by = 1) #Name rows
#Stanandard deviation from all stations by month for given year
#Place results in the matrix
AnswerLen[1, ] = tapply(Temp90$Temperature, Temp90$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[2, ] = tapply(Temp91$Temperature, Temp91$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[3, ] = tapply(Temp92$Temperature, Temp92$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[4, ] = tapply(Temp93$Temperature, Temp93$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[5, ] = tapply(Temp94$Temperature, Temp94$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[6, ] = tapply(Temp95$Temperature, Temp95$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[7, ] = tapply(Temp96$Temperature, Temp96$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[8, ] = tapply(Temp97$Temperature, Temp97$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[9, ] = tapply(Temp98$Temperature, Temp98$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[10, ] = tapply(Temp99$Temperature, Temp99$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[11, ] = tapply(Temp00$Temperature, Temp00$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[12, ] = tapply(Temp01$Temperature, Temp01$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[13, ] = tapply(Temp02$Temperature, Temp02$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[14, ] = tapply(Temp03$Temperature, Temp03$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[15, ] = tapply(Temp04$Temperature, Temp04$Month, length, na.rm = TRUE) #length for each month in the year
AnswerLen[16, ] = tapply(Temp05$Temperature, Temp05$Month, length, na.rm = TRUE) #length for each month in the year
#Stanandard deviation from all stations by month for given year
#Place results in the matrix
AnswerLen[1, ] = tapply(Temp90$Temperature, Temp90$Month, length) #length for each month in the year
#Stanandard deviation from all stations by month for given year
#Place results in the matrix
AnswerLen[1, ] = tapply(Temp90$Temperature, Temp90$Month, length) #Number of observations
AnswerLen[2, ] = tapply(Temp91$Temperature, Temp91$Month, length) #Number of observations
AnswerLen[3, ] = tapply(Temp92$Temperature, Temp92$Month, length) #Number of observations
AnswerLen[4, ] = tapply(Temp93$Temperature, Temp93$Month, length) #Number of observations
AnswerLen[5, ] = tapply(Temp94$Temperature, Temp94$Month, length) #Number of observations
AnswerLen[6, ] = tapply(Temp95$Temperature, Temp95$Month, length) #Number of observations
AnswerLen[7, ] = tapply(Temp96$Temperature, Temp96$Month, length) #Number of observations
AnswerLen[8, ] = tapply(Temp97$Temperature, Temp97$Month, length) #Number of observations
AnswerLen[9, ] = tapply(Temp98$Temperature, Temp98$Month, length) #Number of observations
AnswerLen[10, ] = tapply(Temp99$Temperature, Temp99$Month, length) #Number of observations
AnswerLen[11, ] = tapply(Temp00$Temperature, Temp00$Month, length) #Number of observations
AnswerLen[12, ] = tapply(Temp01$Temperature, Temp01$Month, length) #Number of observations
AnswerLen[13, ] = tapply(Temp02$Temperature, Temp02$Month, length) #Number of observations
AnswerLen[14, ] = tapply(Temp03$Temperature, Temp03$Month, length) #Number of observations
AnswerLen[15, ] = tapply(Temp04$Temperature, Temp04$Month, length) #Number of observations
AnswerLen[16, ] = tapply(Temp05$Temperature, Temp05$Month, length) #Number of observations
AnswerLen
Z = cbind(Veg$R, Veg$Rock, Veg$LITTER)
colnames(Z) = c("R", "ROCK", "LITTER")
summary(Z)
colnames(Z) = c("R", "ROCK", "LITTER")
ncol(Z)
#summary()
Z = cbind(Veg$R, Veg$Rock, Veg$LITTER)
ncol(Z)
summary(Z)
#summary()
Z = cbind(Veg$R, Veg$Rock, Veg$LITTER, Veg$TransectName)
ncol(Z)
#summary()
Z = cbind(Veg$R)
ncol(Z)
#summary()
Z = cbind(Veg$R, Veg$ROCK)
ncol(Z)
#summary()
Z = cbind(Veg$R, Veg$ROCK, Veg$LITTER)
ncol(Z)
colnames(Z) = c("R", "ROCK", "LITTER")
summary(Z)
summary(Veg[ , c("R", "ROCK", "LITTER")])
summary(Veg[ , c(5,6,7)])
Deer = read.table(file = "RBook/Deer.txt", header = TRUE)
names(Deer)
str(Deer)
summary(Deer)
str(Deer)
table(Deer$Farm)
str(Deer)
tabel(Deer$Sex)
table(Deer$Sex)
#returns number a var appears
table(Deer$Farm) #Number of observations per farm
table(Deer$Sex, Deer$Farm)
table(Deer$Sex, Deer$Year)
table(Temp.dataframe)
table(Temp.dataframe$Station)
table(Temp.dataframe$Year)
table(Temp.dataframe$Year, Temp.dataframe$Station)
