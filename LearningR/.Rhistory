xlab = "Exposed Soil", #xaxis label
ylab = "Species Richness", #yaxis label
main = "Scatter plot", # title
xlim = c(min(Veg$BARESOIL, na.rm = TRUE), max(Veg$BARESOIL, na.rm = TRUE)), #xaxis graph bounds
ylim = c(min(Veg$R, na.rm = TRUE), max(Veg$R, na.rm = TRUE)) #yaxis graph bounds
)
M.Loess = loess(R ~ BARESOIL, data = Veg)
Fit = fitted(M.Loess)
rm(fit)
lines(Veg$BARESOIL, Fit)
#Determine order of values in BARESOIL and rearrange the values of both vectors in line()
plot(x = Veg$BARESOIL, y = Veg$R,
xlab = "Exposed Soil", #xaxis label
ylab = "Species Richness", #yaxis label
main = "Scatter plot", # title
xlim = c(min(Veg$BARESOIL, na.rm = TRUE), max(Veg$BARESOIL, na.rm = TRUE)), #xaxis graph bounds
ylim = c(min(Veg$R, na.rm = TRUE), max(Veg$R, na.rm = TRUE)) #yaxis graph bounds
)
M.Loess = loess(R ~ BARESOIL, data = Veg)
Fit = fitted(M.Loess) #Use loess data for fitted() and set to Fit
Ord1 = order(Veg$BARESOIL)
lines(Veg$BARESOIL[Ord1], Fit[Ord1], lwd = 3, lty = 2)
Terr = read.table(file = "RBook/Amphibian_road_Kills.xls", header = TRUE, sep = ",") #Read using read.table
Terr = read.table(file = "RBook/Amphibian_road_Kills.csv", header = TRUE, sep = ",") #Read using read.table
View(Terr)
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE))
)
#Initial plot
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE))
)
#Smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr)
Fit = fitted(Curve)
Order = order(Terr$D.PARK)
#Initial plot
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE))
)
#Smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr)
Fit = fitted(Curve)
Order = order(Terr$D.PARK)
lines(Terr$D.PARK[Order], Fit(Order), lwd = 3, lty = 2)
lines(Terr$D.PARK[Order], Fit[Order], lwd = 3, lty = 2)
#Initial plot
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE))
)
#Smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr)
Fit = fitted(Curve)
Order = order(Terr$D.PARK)
lines(Terr$D.PARK[Order], Fit[Order], lwd = 3, lty = 2)
#Smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr)
Fit = fitted(Curve)
Order = order(Terr$TOT.N)
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2)
View(Terr)
summary(Terr$OLIVE)
Terr$OLIVE2 = Terr$OLIVE
Terr$OLIVE2[Terr$OLIVE <= 7.35] = 1
Terr$OLIVE2[Terr$OLIVE > 7.35] = 2
summary(Terr$OLIVE)
Terr$OLIVE2 = Terr$OLIVE
Terr$OLIVE2[Terr$OLIVE <= 7.35] = 1
Terr$OLIVE2[Terr$OLIVE > 7.35] = 2
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
cex = Terr$OLIVE2
)
Curve = loess(D.PARK ~ TOT.N, data = Terr) #Park as a function of Tot
Fit = fitted(Curve)
Order = order(Terr$TOT.N) #Order Tot
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2) #Plot the line
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
cex = Terr$OLIVE2,
col = Terr$OLIVE2
)
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
pch = 16,
cex = Terr$OLIVE2,
col = Terr$OLIVE2
)
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
cex = Terr$OLIVE2,
col = Terr$OLIVE2
)
#Add smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr) #Park as a function of Tot
Fit = fitted(Curve)
Order = order(Terr$TOT.N) #Order Tot
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2) #Plot the line
?lines
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2, col = 3) #Plot the line
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2, col = blue) #Plot the line
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2, col = "blue") #Plot the line
Terr$OLIVE2 = Terr$OLIVE
Terr$OLIVE2[Terr$OLIVE = 7.35] = 1
Terr$OLIVE2[Terr$OLIVE => 7.35] = 2
#New plot
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
cex = Terr$OLIVE2,
col = Terr$OLIVE2
)
#Add smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr) #Park as a function of Tot
Fit = fitted(Curve)
Order = order(Terr$TOT.N) #Order Tot
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2, col = "blue") #Plot the line with color
summary(Terr$OLIVE)
Terr$OLIVE2 = Terr$OLIVE
Terr$OLIVE2[Terr$OLIVE = 7.35] = 1
Terr$OLIVE2[Terr$OLIVE >= 7.35] = 2
#New plot
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
cex = Terr$OLIVE2,
col = Terr$OLIVE2
)
#Add smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr) #Park as a function of Tot
Fit = fitted(Curve)
Order = order(Terr$TOT.N) #Order Tot
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2, col = "blue") #Plot the line with color
summary(Terr$OLIVE)
Terr$OLIVE2 = Terr$OLIVE
Terr$OLIVE2[Terr$OLIVE < 7.35] = 1
Terr$OLIVE2[Terr$OLIVE >= 7.35] = 2
#New plot
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
cex = Terr$OLIVE2,
col = Terr$OLIVE2
)
#Add smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr) #Park as a function of Tot
Fit = fitted(Curve)
Order = order(Terr$TOT.N) #Order Tot
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2, col = "blue") #Plot the line with color
summary(Terr$OLIVE)
Terr$OLIVE2 = Terr$OLIVE
Terr$OLIVE2[Terr$OLIVE <= 7.35] = 1
Terr$OLIVE2[Terr$OLIVE > 7.35] = 2
#New plot
plot(x = Terr$TOT.N, y = Terr$D.PARK,
xlab = "Dead Animals", ylab = "Distance to Park",
main = "Road Kills",
xlim = c(min(Terr$TOT.N, na.rm = TRUE), max(Terr$TOT.N, na.rm = TRUE)),
ylim = c(min(Terr$D.PARK, na.rm = TRUE), max(Terr$D.PARK, na.rm = TRUE)),
cex = Terr$OLIVE2,
col = Terr$OLIVE2
)
#Add smoothing curve
Curve = loess(D.PARK ~ TOT.N, data = Terr) #Park as a function of Tot
Fit = fitted(Curve)
Order = order(Terr$TOT.N) #Order Tot
lines(Terr$TOT.N[Order], Fit[Order], lwd = 3, lty = 2, col = "blue") #Plot the line with color
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
#Import data
Terr = read.table(file = "RBook/Amphibian_road_Kills.csv", header = TRUE, sep = ",") #Read using read.table
names(Terr)
str(Terr)
summary(Terr)
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
Owls = read.table(file = "Rbook/Owls.txt", header = TRUE)
#setwd("/home/diego/Learning/LearningR") #Laptop
setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
Owls = read.table(file = "Rbook/Owls.txt", header = TRUE)
Owls = read.table(file = "RBook/Owls.txt", header = TRUE)
names(Owls)
str(Owls)
summar(Owls)
summary(Owls)
unique(Owls$Nest)
str(Owls)
View(Owls)
Owls.ATV = Owls[Owls$Nest == "AutavauxTV", ]
Owls.ATV
#Plot arrival time vs negotiation behavior
plot(x = Owls.ATV$ArrivalTime, y = Owls.ATV$NegPerChick,
main = "AutavauxTV",
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
Owls.ATV = Owls[Owls$Nest == "AutavauxTV"] #Get nest data
Owls.ATV = Owls[Owls$Nest == "AutavauxTV", ] #Get nest data
Owls.ATV
str(Owls.ATV)
unique(Owls.ATV$Nest)
#Bot nest data
Owls.Bot = Owls[owls$Nest == "Bochet", ]
#Bot nest data
Owls.Bot = Owls[Owls$Nest == "Bochet", ]
Owls.Bot
str(Owls.Bot)
#Bot nest data
Owls.Bot = Owls[Owls$Nest == "Bochet", ]
Owls.Bot
str(Owls.Bot)
plot(x = Owls.Bot$ArrivalTime, y = Owls.Bot$NegPerChick,
main = "Bochet",
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
#Modify Bot code
Nest.i = "Bochet"
Owls.i = Owls[Owls$Nest == Nest.i. ]
#Modify Bot code
Nest.i = "Bochet"
Owls.i = Owls[Owls$Nest == Nest.i, ]
plot(x = Owls.i$ArrivalTime, y = Owls.i$NegPerChick,
main = Nest.i,
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
paste(Nest.i, ".jpg", sep = "")
#Modify Bot code for better functunality
Nest.i = "Bochet"
Owls.i = Owls[Owls$Nest == Nest.i, ]
plot(x = Owls.i$ArrivalTime, y = Owls.i$NegPerChick,
main = Nest.i,
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
jpeg(file = "Test.jpg")
paste(Nest.i, ".jpg", sep = "")
dev.off()
#Modify Bot code for better functunality
Nest.i = "Bochet"
Owls.i = Owls[Owls$Nest == Nest.i, ]
jpeg(file = "Test.jpg")
plot(x = Owls.i$ArrivalTime, y = Owls.i$NegPerChick,
main = Nest.i,
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
paste(Nest.i, ".jpg", sep = "")
#Modify Bot code for better functunality
Nest.i = "Bochet"
Owls.i = Owls[Owls$Nest == Nest.i, ]
jpeg(file = "Test.jpg")
plot(x = Owls.i$ArrivalTime, y = Owls.i$NegPerChick,
main = Nest.i,
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
dev.off()
#Modify Bot code for better functunality
Nest.i = "Bochet"
Owls.i = Owls[Owls$Nest == Nest.i, ]
FileName = paste(Nest.i, ".jpg", sep = "")
jpeg(file = FileName)
plot(x = Owls.i$ArrivalTime, y = Owls.i$NegPerChick,
main = Nest.i,
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
dev.off()
#Modify Bot code for better functunality
setwd("/home/valdeslab/Learning/LearningR/Plots/Chapter_6") #GreenMachine
Nest.i = "Bochet"
Owls.i = Owls[Owls$Nest == Nest.i, ]
FileName = paste(Nest.i, ".jpg", sep = "")
jpeg(file = FileName)
plot(x = Owls.i$ArrivalTime, y = Owls.i$NegPerChick,
main = Nest.i,
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
dev.off()
#Put it all in a loop
AllNests = unique(Owls$Nest)
#Put it all in a loop
AllNests = unique(Owls$Nest)
for (i in 1:27){
Nest.i = AllNests[i]
Owls.i = Owls[Owls$Nest == Nest.i, ] #All nest data
FileName = paste(Nest.i, ".jpg", sep = "") #Create file name
jpeg(file = FileName) #Open file for storage, all output saved here
plot(x = Owls.i$ArrivalTime, y = Owls.i$NegPerChick,
main = Nest.i,
xlab = "Arrival Time",
ylab = "Negotiation Behaviour"
)
dev.off() #Close file
}
#setwd("/home/diego/Learning/LearningR") #Laptop
setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE, sep = ",") #Read using read.table
names(Temp.dataframe)
str(Temp.dataframe)
Station = unique(Temp.dataframe$Station)
Station
?for (variable in vector) {
}
for (i in Station) {
i
}
for (i in Station) {
i
}
Station[i]
for (i in Station) {
Station[i]
}
for (i in Station) {
Station[i]
}
for (i in 1:30) {
Station[i]
}
Station[2]
Station
Station[6]
?for
for (i in length(Station)) {
}
i
Station
Station
for (i in length(Station)) {
i
Station
}
for (i in length(Station)) {
i
Station
Station[i]
}
for (i in 1:30) {
}
x = i
for (i in 1:30) {
x = i
}
x
for (i in 1:30) {
x = i
x
}
x
for (i in 1:31) {
x = i
x
}
x
for (i in 1:30) {
x = x + i
}
x
for (i in length(Station)) {
x = x + i
}
x
for (i in length(Station)) {
x = x + i
}
x
for (i in length(Station)) {
x = x + i
}
x
rm(x)
for (i in length(Station)) {
x = x + i
}
x
x = 0
for (i in length(Station)) {
x = x + i
}
x
x = 0
for (i in length(Station)) {
x = Station[i]
}
x
for (i in length(Station)) {
Station.i = Temp.dataframe[Temp.dataframe$Station == Station[i], ] #Get Station data
FileName = paste(Station[i], ".jpg", sep = "")
}
for (i in length(Station)) {
Station.i = Temp.dataframe[Temp.dataframe$Station == Station[i], ] #Get Station data
FileName = paste(Station[i], ".jpg", sep = "")
FileName
}
FileName
for (i in length(Station)) {
Station.i = Temp.dataframe[Temp.dataframe$Station == Station[i], ] #Get Station data
jpeg(file = paste(Station[i], ".jpg", sep = ""))
}
for (i in length(Station)) {
Station.i = Temp.dataframe[Temp.dataframe$Station == Station[i], ] #Get Station data
#jpeg(file = paste(Station[i], ".jpg", sep = ""))
plot(x = Temp.dataframe$Temperature, y = Temp.dataframe$Year)
}
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE, sep = ",") #Read using read.table
names(Temp.dataframe)
str(Temp.dataframe)
Station = unique(Temp.dataframe$Station)
Station.i = Temp.dataframe[Temp.dataframe$Station == "Station[i]"DANT, ] #Get Station data
Station.i = Temp.dataframe[Temp.dataframe$Station == "DANT", ] #Get Station data
Station.i
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE, sep = ",") #Read using read.table
names(Temp.dataframe)
str(Temp.dataframe)
Station = unique(Temp.dataframe$Station)
rm(Station.i)
Temp.dataframe
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE, sep = ",") #Read using read.table
Temp.dataframe
View(Temp.dataframe)
Temp.dataframe
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE, sep = ",") #Read using read.table
Temp.dataframe
names(Temp.dataframe)
str(Temp.dataframe)
Station = unique(Temp.dataframe$Station)
Station.i = Temp.dataframe[Temp.dataframe$Station == "DANT", ] #Get Station data
Station.i
#jpeg(file = paste(Station[i], ".jpg", sep = ""))
plot(x = Temp.dataframe$Temperature, y = Temp.dataframe$Year,
main = "Test")
Station.i = Temp.dataframe[Temp.dataframe$Station == "DANT", ] #Get Station data
plot(x = Station.i$Temperature, y = Station.i$Year,
main = "Test")
View(Temp.dataframe)
plot(x = Station.i$Temperature, y = Station.i$Year,
main = "Test")
Year = unique(Station.i)
View(Year)
Year = unique(Station.i$Year)
Owls = read.table(file = "RBook/Owls.txt", header = TRUE)
View(Owls)
Station.i = Temp.dataframe[Temp.dataframe$Station == "DANT", ] #Get Station data
Year = unique(Station.i$Year) #Get vector of years
Temp = Station.i[Station.i$Year == 1990, ]
View(Temp)
View(Temp)
Temp = Station.i[Station.i$Year == 1990, ]
Answer = tapply(Temp$Temperature, Temp$Month, mean, na.rm = TRUE)
Anser
Answer
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
Temp.dataframe = read.table(file = "RBook/Temperature.csv", header = TRUE, sep = ",") #Read using read.table
names(Temp.dataframe)
str(Temp.dataframe)
Station = unique(Temp.dataframe$Station)
Station.i = "DANT"
print(Station.i)
Temp.Station = Temp.dataframe[Temp.dataframe$Station == Station.i, ]
plot(x = Temp.Station$dDay2, y = Temp.Station$Temperature)
plot(x = Temp.Station$dDay2, y = Temp.Station$Temperature,
main = Station.i)
Station.i = "DANT"
print(Station.i)
Temp.Station = Temp.dataframe[Temp.dataframe$Station == Station.i, ]
plot(x = Temp.Station$dDay2, y = Temp.Station$Temperature,
main = Station.i)
Temp.Station
plot(x = Temp.Station$dDay2, y = Temp.Station$Temperature,
main = Station.i
)
