Id
#repeat()
Id = rep(c(1, 2, 3, 4), each = 8)
#And simplified using a range
Id = rep(1 : 4, each = 8)
Id <- c(1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4)
Id
#repeat()
#Produces the same vector as above
Id = rep(c(1, 2, 3, 4), each = 8)
Id
#And simplified using a range
Id = rep(1 : 4, each = 8)
Id
#Produces a sequence
a = seq(from = 1, to = 4, by = 1)
a
#combine the two
a = seq(from = 1, to = 4, by = 1)
a
a = rep(a, each = 8)
a
VarNames = c("Wingcrd", "Tarsus", "Head", "Wt")
VarNames
Id2 = rep(VarNames, each = 8)
Id2
Id2NoEach = rep(VarNames, 8)
Id2NoEach
?rep
#cbind()
#Contains original varibles in columns
Z = cbind(Wingcrd, Tarsus, Head, Wt)
Z
Wingcrd
Z = cbind(Wingcrd, Tarsus, Head, Wt)
Z
#Access n column
Z[ , 1]
Z[ , 1] #column 1
Z[1:8, 1] #column 1
Z[2, ] #row 2
Z[2, 1:4] #row2
#Experiments with access
Z[1, 1] #row 1, column 1
Z[ , 2:3] #column 2 and 3
X = Z[4, 4] #row4, column4
X
X = Z[4, 4] #row4, column4
X
Y = Z[ , 4] #column 4
Y
Z
W = Z[ , -3] #exclude column 3
W
D = Z[ , c(1, 3, 4)] #column 1, 3, 4
D
E = Z [ , c(-1, -3)] #exclude column 1 and 3
E
#dimensions of Z
dim(Z)
(nrow = dim(z)[1])
(nrow = dim(Z)[1])
(ncol = dim(Z)[2])
?nrow
nrow(Z)
nrow
rm(nrow)
rm(ncol)
Zrow = nrow(Z)
Zcol = ncol(Z)
Zrow
Zcol
#rbind()
#Arrange var in rows
Z2 = rbind(Wingcrd, Tarsus, Head, Wt)
Z2
?edit
?fix
#vector()
#Create a vector...yay!
W = vector(length = 8)
W #Will return FALSE
W[1] = 59
W[2] = 55
W[3] = 53.5
W[4] = 55
W[5] = 52.5
W[6] = 57.5
W[7] = 53
W[8] = 55
W
W[1]
W[1:4]
W[2:6]
W[-2]
W[c(1,2,3)]
q()
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
#setwd("/home/diego/Learning/LearningR") #Laptop
setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
library(lattice)
demo(lattice)
?xyplot
demo(xyplot)
#Mulitpanel Scatterplots - xyplot
Env = read.table("RBook/RIKZENV.txt", header = TRUE)
rm(list = ls()) #clear environment
#Mulitpanel Scatterplots - xyplot
Env = read.table("RBook/RIKZENV.txt", header = TRUE)
Env$MyTime = Env$Year + Env$dDay3 / 365
names(Env)
str(Env)
View(Env)
xyplot(SAL ~ MyTime | factor(Station),
type = "1",
strip = function(bg, ...)
strip.default(bg = 'white', ...),
col.line = 1, data = Env)
clear = function() {
if (!is.null(dev.list())) dev.off()
}
clear()
xyplot(SAL ~ MyTime | factor(Station),
type = "1",
strip = function(bg, ...)
strip.default(bg = 'white', ...),
col.line = 1, data = Env)
#plot salinity vs time, conditional on station
xyplot(SAL ~ MyTime | factor(Station),
type = "l",
strip = function(bg, ...)
strip.default(bg = 'white', ...),
col.line = 1, data = Env)
#For comparison
xyplot(SAL ~ MyTime | factor(Station), data = Env)
xyplot(SAL ~ MyTime | factor(Station),
type = "l", strip = TRUE, col.line = 1,
data = Env)
xyplot(SAL ~ MyTime | factor(Station),
type = "l", strip = FALSE, col.line = 1,
data = Env)
clear()
View(Env)
xyplot(T ~ MyTime | factor(Station),
type = "l", strip = FALSE, col.line = 1,
data = Env)
names(Env)
xyplot(T ~ Area | factor(Station),
type = "l", strip = FALSE, col.line = 1,
data = Env)
str(Env)
xyplot(T ~ MyTime | factor(Station),
type = "l", strip = FALSE, col.line = 1,
data = Env)
xyplot(T ~ Area | factor(Station),
type = "l", strip = FALSE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = "l", strip = FALSE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
strip = FALSE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = "l", strip = FALSE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Station),
type = "l", strip = FALSE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Station),
type = "l", strip = TRUE, col.line = 1,
data = Env)
xyplot(T ~ Area | factor(Station),
type = "l", strip = TRUE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = c("g","smooth","l"),
strip = TRUE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = c("g","smooth"),
strip = TRUE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = c("g","smooth", "l"),
strip = TRUE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = c("g","smooth", "l"),
strip = TRUE, #col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = c("g","smooth", "l"),
strip = TRUE, col.line = 1,
data = Env)
clear()
xyplot(T ~ MyTime | factor(Station),
type = "l", strip = TRUE, col.line = 1,
data = Env)
xyplot(T ~ MyTime | factor(Area),
type = c("g","smooth", "l"),
strip = TRUE, col.line = 1,
data = Env)
clear()
str(Env)
#Multiplanel Boxplots - bwplot()
bwplot(SAL ~ factor(Month) | Area,
strip = strip.custom(bg = 'white'),
cex = 0.5, layout = c(2,5),
data = Env, xlab = "Month", ylab = "Salinity",
par.settings = list(
box.rectangle = list(col =1),
box.umbrella = list(col = 1),
plot.symbol = list(cex = .5, col = 1)
))
bwplot(SAL ~ factor(Month) | Area, layout = c(2,5),
data = Env, xlab = "Month", ylab = "Salinity")
clear()
#Multiplanel Boxplots - bwplot()
bwplot(SAL ~ factor(Month) | Area,
strip = strip.custom(bg = 'white'),
cex = 0.5, layout = c(2,5),
data = Env, xlab = "Month", ylab = "Salinity",
par.settings = list(
box.rectangle = list(col =1),
box.umbrella = list(col = 1),
plot.symbol = list(cex = .5, col = 1)
))
bwplot(T ~ factor(Month) | Area,
strip = strip.custom(bg = 'white'),
cex = 0.5, layout = c(2,5),
data = Env, xlab = "Month", ylab = "Salinity",
par.settings = list(
box.rectangle = list(col =1),
box.umbrella = list(col = 1),
plot.symbol = list(cex = .5, col = 1)
))
clear()
bwplot(T ~ factor(Month) | Area,
strip = strip.custom(bg = 'white'),
cex = 0.5, layout = c(2,5),
data = Env,
main = "Temperature", xlab = "Month", ylab = "Salinity",
par.settings = list(
box.rectangle = list(col =1),
box.umbrella = list(col = 1),
plot.symbol = list(cex = .5, col = 1)
))
bwplot(SAL ~ factor(Month) | Area,
strip = strip.custom(bg = 'white'),
cex = 0.5, layout = c(2,5),
data = Env, xlab = "Month", ylab = "Salinity",
par.settings = list(
box.rectangle = list(col =1),
box.umbrella = list(col = 1),
plot.symbol = list(cex = .5, col = 1)
))
clear()
#Salinity
bwplot(SAL ~ factor(Month) | Area,
strip = strip.custom(bg = 'white'),
cex = 0.5, layout = c(2,5),
data = Env,
main = "Salinity",xlab = "Month", ylab = "Salinity",
par.settings = list(
box.rectangle = list(col =1),
box.umbrella = list(col = 1),
plot.symbol = list(cex = .5, col = 1)
))
#Temperature
bwplot(T ~ factor(Month) | Area,
strip = strip.custom(bg = 'white'),
cex = 0.5, layout = c(2,5),
data = Env,
main = "Temperature", xlab = "Month", ylab = "Salinity",
par.settings = list(
box.rectangle = list(col =1),
box.umbrella = list(col = 1),
plot.symbol = list(cex = .5, col = 1)
))
#Multipanel Cleveland Dotplots - dotplot()
dotplot(factor(Month) ~ SAL | Station,
subset = Area == "OS", jitter.x = TRUE, col = 1,
data = Env, strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
str(Env$Area)
summary(Env$Area)
dotplot(factor(Month) ~ SAL | Station,
jitter.x = TRUE, #Adds variations to show multiple observations
col = 1, data = Env, strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
?xyplot
dotplot(factor(Month) ~ SAL | Station,
jitter.x = TRUE, #Adds variations to show multiple observations
col = 1, cex = 0.5, pch = 16,
data = Env,
strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
dotplot(factor(Month) ~ SAL | Station,
jitter.x = TRUE, #Adds variations to show multiple observations
col = 1, cex = 0.5,
data = Env,
strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
dotplot(factor(Month) ~ SAL | Station,
jitter.x = TRUE, #Adds variations to show multiple observations
col = 1,
data = Env,
strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
dotplot(SAL   ~ factor(Month) | Station,
strip = strip.custom(bg = 'white'),
scales = list (y = list (relation = "free",
cex = .6),x = list (cex = .6)),
cex = .2,pch=16,
data = Data, xlab = "Month",
ylab = "Salinity")
dotplot(SAL   ~ factor(Month) | Station,
strip = strip.custom(bg = 'white'),
scales = list (y = list (relation = "free",
cex = .6),x = list (cex = .6)),
cex = .2,pch=16,
data = Env, xlab = "Month",
ylab = "Salinity")
dotplot(factor(Month) ~ SAL | Station,
strip = strip.custom(bg = 'white'),
scales = list (y = list (relation = "free",
cex = .6),x = list (cex = .6)),
cex = .2,pch=16,
data = Env, xlab = "Month",
ylab = "Salinity")
clear()
dotplot(factor(Month) ~ SAL | Station,
jitter.x = TRUE, #Adds variations to show multiple observations
col = 1,
data = Env,
strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
#From answer key, with a few modifications
dotplot(factor(Month) ~ SAL | Station,
strip = strip.custom(bg = 'white'),
scales = list (
y = list (relation = "free",  cex = .6),
x = list (cex = .6)
),
cex = .2,pch=16,
data = Env, xlab = "Month",
ylab = "Salinity")
clear()
#Multipanel Cleveland Dotplots - dotplot()
dotplot(factor(Month) ~ SAL | Station,
subset = Area == "OS", #Select a subsection of data
jitter.x = TRUE, #Adds variations to show multiple observations
col = 1, data = Env, strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
clear()
#Multipanel Cleveland Dotplots - dotplot()
dotplot(factor(Month) ~ SAL | Station,
subset = (Area == "OS"), #Select a subsection of data
jitter.x = TRUE, #Adds variations to show multiple observations
col = 1, data = Env, strip = strip.custom(bg = 'white'),
cex = 0.5, ylab = "Month", xlab = "Salinity")
clear()
#Multipanel Histograms - histogram()
histogram( ~ SAL | Station, data = Env,
subset = (Area == "OS"), layout = c(1,4),
nint = 30, xlab = "Salinity", strip = FALSE,
strip.left = TRUE, ylab = "Frequencies"
)
clear()
#Multipanel Histograms - histogram()
histogram( ~ SAL | Station, data = Env,
subset = Area == "OS", layout = c(1,4),
nint = 30, xlab = "Salinity", strip = FALSE,
strip.left = TRUE, ylab = "Frequencies"
)
#Multipanel Histograms - histogram()
histogram( ~ SAL | Station, data = Env,
subset = (Area == "OS"), layout = c(1,4),
nint = 30, xlab = "Salinity", strip = FALSE,
strip.left = TRUE, ylab = "Frequencies"
)
densityplot( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
layout = c(1,4),
nint = 30, #Number of bars
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
densityplot( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
layout = c(1,4),
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
densityplot( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
#Multipanel Histograms - histogram()
histogram( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
layout = c(1,4), # 1 col, 4 rows
nint = 30, #Number of bars
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
densityplot( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
layout = c(4,1)
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
densityplot( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
layout = c(4,1),
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
densityplot( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
densityplot( ~ SAL | Station, data = Env,
subset = (Area == "OS"),
layout = c(1,4), # 1 col, 4 rows
xlab = "Salinity", ylab = "Frequencies",
strip = FALSE, strip.left = TRUE #Move strip to side of panels
)
clear
clear()
str(Env)
panel.xyplot(...)
#Panel Functions
xyplot(SAL ~ Month | Year, data = Env,
type = c("p"), subset = (Station == "GROO"),
xlim = c(0, 12), ylim = c(0,30), pch = 19,
panel = function (...) {
panel.xyplot(...)
panel.grid(..., h = -1, v = -1)
panel.loess(...)
})
#Panel Functions
xyplot(SAL ~ Month | factor(Year), data = Env,
type = c("p"), subset = (Station == "GROO"),
xlim = c(0, 12), ylim = c(0,30), pch = 19,
panel = function (...) {
panel.xyplot(...)
panel.grid(..., h = -1, v = -1) #Add grid
panel.loess(...) #Add smoothing line
})
#Simpler version
xyplot(SAL ~ Month | Year, data = Env,
subset = (Station == "GROO"), pch = 19,
xlim = c(0, 12), ylim = c(0, 30),
type = c("p", "g", "smooth"))
clear()
#Panel Functions
xyplot(SAL ~ Month | Year # factor(Year),
data = Env,
type = c("p"), subset = (Station == "GROO"),
xlim = c(0, 12), ylim = c(0,30), pch = 19,
panel = function (...) {
panel.xyplot(...)
panel.grid(..., h = -1, v = -1) #Add grid, negative values force alignment to data
panel.loess(...) #Add smoothing line
})
#Panel Functions
xyplot(SAL ~ Month | Year, # factor(Year),
data = Env,
type = c("p"), subset = (Station == "GROO"),
xlim = c(0, 12), ylim = c(0,30), pch = 19,
panel = function (...) {
panel.xyplot(...)
panel.grid(..., h = -1, v = -1) #Add grid, negative values force alignment to data
panel.loess(...) #Add smoothing line
})
#Panel Functions
xyplot(SAL ~ Month | factor(Year),
data = Env,
type = c("p"), subset = (Station == "GROO"),
xlim = c(0, 12), ylim = c(0,30), pch = 19,
panel = function (...) {
panel.xyplot(...)
panel.grid(..., h = -1, v = -1) #Add grid, negative values force alignment to data
panel.loess(...) #Add smoothing line
})
#Simpler version
xyplot(SAL ~ Month | Year, data = Env,
subset = (Station == "GROO"), pch = 19,
xlim = c(0, 12), ylim = c(0, 30),
type = c("p", "g", "smooth"))
xyplot(SAL ~ Month, data = Env)
clear()
dotplot(factor(Month) ~ SAL | Station, pch = 16,
subset = (Area == "OS"), data = Env,
ylab = "Month", xlab = "Salinity",
panel = function(x, y, ...) {
Q = quantile(x, c(0.25, 0.5, 0.75), na.rm = TRUE)
R = Q[3] - Q[1]
L = Q[2] - 3 * (Q[3] - Q[1])
MyCex = rep(0.4, length(y))
MyCol = rep(1, length(y))
MyCex[x < L] = 1.5
MyCol[x < L] = 2
panel.dotplot(x, y, cex = MyCex, col = MyCol, ...)
})
