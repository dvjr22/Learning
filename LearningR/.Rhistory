title(main = main, ...)
invisible(NULL)
}
pie2(Cases, col = rainbow(16), clockwise = TRUE, main = "Deaths By Country")
text(0.5 * P$x, 0.5 * P$y, labels[i], xpd = TRUE,
adj = ifelse(P$x < 0, 1, 0), ...)
pie2 = function (x, labels = names(x), edges = 200, radius = 0.8, clockwise = FALSE,
init.angle = if (clockwise) 90 else 0, density = NULL, angle = 45,
col = NULL, border = NULL, lty = NULL, main = NULL, ...)
{
if (!is.numeric(x) || any(is.na(x) | x < 0))
stop("'x' values must be positive.")
if (is.null(labels))
labels <- as.character(seq_along(x))
else labels <- as.graphicsAnnot(labels)
x <- c(0, cumsum(x)/sum(x))
dx <- diff(x)
nx <- length(dx)
plot.new()
pin <- par("pin")
xlim <- ylim <- c(-1, 1)
if (pin[1L] > pin[2L])
xlim <- (pin[1L]/pin[2L]) * xlim
else ylim <- (pin[2L]/pin[1L]) * ylim
dev.hold()
on.exit(dev.flush())
plot.window(xlim, ylim, "", asp = 1)
if (is.null(col))
col <- if (is.null(density))
c("white", "lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk")
else par("fg")
if (!is.null(col))
col <- rep_len(col, nx)
if (!is.null(border))
border <- rep_len(border, nx)
if (!is.null(lty))
lty <- rep_len(lty, nx)
angle <- rep(angle, nx)
if (!is.null(density))
density <- rep_len(density, nx)
twopi <- if (clockwise)
-2 * pi
else 2 * pi
t2xy <- function(t) {
t2p <- twopi * t + init.angle * pi/180
list(x = radius * cos(t2p), y = radius * sin(t2p))
}
for (i in 1L:nx) {
n <- max(2, floor(edges * dx[i]))
P <- t2xy(seq.int(x[i], x[i + 1], length.out = n))
polygon(c(P$x, 0), c(P$y, 0), density = density[i], angle = angle[i],
border = border[i], col = col[i], lty = lty[i])
P <- t2xy(mean(x[i + 0:1]))
lab <- as.character(labels[i])
if (!is.na(lab) && nzchar(lab)) {
lines(c(1, 1.55) * P$x, c(1, 1.55) * P$y)
text(0.5 * P$x, 0.5 * P$y, labels[i], xpd = TRUE,
adj = ifelse(P$x < 0, 1, 0), ...)
}
}
title(main = main, ...)
invisible(NULL)
}
pie2(Cases, col = rainbow(16), clockwise = TRUE, main = "Deaths By Country")
pie(Cases, col = rainbow(16), clockwise = TRUE, main = "Deaths By Country")
View(BFCases)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", header = TRUE)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", header = TRUE, unique = FALSE)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", header = TRUE)
?read.table
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt")
View(BFDeaths)
View(BFDeaths)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", sep = "\t", header = TRUE)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", sep = "\t", header = TRUE)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", sep = "\t", header = TRUE, fileEncoding = "utf8")
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", sep = "\t", header = TRUE)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", sep = "\t", header = TRUE, check.names = FALSE)
View(BFDeaths)
View(BFDeaths)
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", header = TRUE, check.names = FALSE)
View(BFDeaths)
View(BFDeaths)
names(BFDeaths)
str(BFDeaths)
DeathsYear = rowSums(BFDeaths[, 2:16])
DeathsYear
names(DeathsYear) = BFDeaths[,1]
DeathsYear
pie(DeathsYear, col = rainbow(16), clockwise = TRUE, main = "Deaths By Country")
DeathsCountry = colSums(BFDeaths[, 2:16])
DeathsCountry
pie(DeathsYear, col = rainbow(16), clockwise = TRUE, main = "Deaths by Country")
pie(DeathsCountry, col = rainbow(16), clockwise = TRUE, main = "Deaths by Country")
names(BFDeaths)
colnames(BFDeaths)[8] = "Indonesia"
names(BFDeaths)
pie(DeathsYear, col = rainbow(16), clockwise = TRUE, main = "Deaths by Year")
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
BFCases = read.table(file = "RBook/BirdFluCases.txt", header = TRUE)
names(BFCases)
str(BFCases)
Cases = colSums(BFCases[, 2:16])
Cases
pie(Cases, col = rainbow(16), clockwise = TRUE, main = "Deaths By Country")
pie(Cases, col = rainbow(16), clockwise = TRUE, main = "Cases By Country")
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", header = TRUE, check.names = FALSE) #File has a bad name
names(BFDeaths)
str(BFDeaths)
colnames(BFDeaths)[8] = "Indonesia" #Change to a good name
DeathsYear = rowSums(BFDeaths[, 2:16])
names(DeathsYear) = BFDeaths[,1]
DeathsYear
pie(DeathsYear, col = rainbow(6), clockwise = TRUE, main = "Deaths by Year")
pie(DeathsYear, col = rainbow(6), clockwise = TRUE, main = "Deaths by Year")
DeathsCountry = colSums(BFDeaths[, 2:16])
DeathsCountry
pie(DeathsCountry, col = rainbow(16), clockwise = TRUE, main = "Deaths by Country")
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
#Pie Chart
BFCases = read.table(file = "RBook/BirdFluCases.txt", header = TRUE)
Cases = rowSums(BFCases[ , 2:16]) #Sum up rows for cols 2:16
names(Cases) = BFCases[ , 1] #Assign names to be the year
Cases
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", header = TRUE, check.names = FALSE) #File has a bad name
BFDeaths = read.table(file = "RBook/BirdFluDeaths.txt", header = TRUE, check.names = FALSE) #File has a bad name
names(BFDeaths)
str(BFDeaths)
colnames(BFDeaths)[8] = "Indonesia" #Change to a good name
Deaths = rowSums(BFDeaths[, 2:16])
names(DeathsYear) = BFDeaths[,1]
names(Deaths) = BFDeaths[,1]
DeathsYear
Deaths
Cases
barplot(Cases, main = "Bird Flu Cases")
Counts = cbind(Cases, Deaths)
View(Counts)
test = c(1,2,3,4,5,6)
anotherTest = cbind(Cases, test)
View(anotherTest)
rm(test, anotherTest)
barplot(Counts)
barplot(t(Counts), col = gray(c(0.5, 1)))
barplot(t(Counts), beside = TRUE)
barplot(Counts)
barplot(t(Counts), col = gray(c(0.5, 1)))
barplot(Counts)
barplot(Counts)
barplot(t(Counts), col = gray(c(0.5, 1)))
barplot(t(Counts), col = gray(c(0.5, 1)))
barplot(t(Counts), beside = TRUE)
pie(Cases, main = "Oridnary Pie Chart")
par(mfrow = c(2,2), mar = c(3,3,2,1))
barplot(Cases, main = "Bird Flu Cases")
Counts = cbind(Cases, Deaths)
barplot(Counts)
barplot(t(Counts), col = gray(c(0.5, 1)))
barplot(t(Counts), beside = TRUE)
t(Counts)
barplot(Counts, beside = TRUE)
barplot(t(Counts), beside = TRUE)
Counts
par(mfrow = c(1,2))
barplot(t(Counts), beside = TRUE)
barplot(Counts, beside = TRUE)
t(Counts)
Counts
barplot(t(Counts), beside = FALSE)
barplot(t(Counts), beside = TRUE)
barplot(Counts, beside = TRUE)
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
Benthic = read.table(file = "RBook/RIKZ2.txt", header = TRUE)
Bent.M = tapply(Benthic$Richness, INDEX = Benthic$Beach, FUN = mean)
Bent.M = tapply(Benthic$Richness, Benthic$Beach, mean)
View(Benthic)
Bent.M = tapply(Benthic$Richness, INDEX = Benthic$Beach, FUN = mean) #Bent.M = tapply(Benthic$Richness, Benthic$Beach, mean)
Bent.M = tapply(Benthic$Richness, Benthic$Beach, mean)
Bent.M = tapply(Benthic$Richness, INDEX = Benthic$Beach, FUN = mean) #
Bent.sd = tapply(Benthic$Richness, Benthic$Beach, sd)
MSD = cbind(Bent.M, Bent.sd)
View(MSD)
Bent.M
View(Benthic)
View(MSD)
barplot(Bent.M)
barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9))
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9))
bp
bp
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9))
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 90, length = 0.1)
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9))
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 90, length = 0.1)
#Create the bar chart in stages
barplot(Bent.M)
barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9))
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9))
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 90, length = 0.1)
#Create the bar chart in stages
barplot(Bent.M)
barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Add labels and color
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Assign to var, will also create the plot again
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 90, length = 0.1)
box()
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 0, length = 0.1) #Add the arrows for the sd
#Create the bar chart in stages
barplot(Bent.M)
barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Add labels and color
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Assign mid points of x axis to be starts of sd
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 0, length = 0.1) #Add the arrows for the sd
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 90, length = 0.1) #Add the arrows for the sd
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Assign mid points of x axis to be starts of sd
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 9
0, length = 0.1) #Add the arrows for the sd
box() #Put a box around the plot
#Create the bar chart in stages
barplot(Bent.M)
barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Add labels and color
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Assign mid points of x axis to be starts of sd
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 9
0, length = 0.1) #Add the arrows for the sd
#Create the bar chart in stages
barplot(Bent.M)
barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Add labels and color
bp = barplot(Bent.M, xlab = "Beach", ylim = c(0,20), ylab = "Richness", col = rainbow(9)) #Assign mid points of x axis to be starts of sd
bp
arrows(bp, Bent.M, bp, Bent.M + Bent.sd, lwd = 1.5, angle = 90, length = 0.1) #Add the arrows for the sd
box() #Put a box around the plot
#Strip Chart
Benth.le = tapply(Benthic$Richness, Benthic$Beach, length)
View(Benthic)
Benth.le
Bent.se = Bent.sd / sqrt(Benth.le)
stripchart(Benthic$Richness ~ Benthic$Beach,
vert = TRUE, pch = 1, method = "jitter",
jit = 0.05, xlab = "Beach", ylab = "Richness")
points(1:9, Bent.M, pch = 16, cex = 1.5)
arrows(1:9, Bent.M, 1:9, Bent.M + Bent.se, lwd = 1.5, angle = 90, length = 0.1)
arrows(1:9, Bent.M,
1:9, Bent.M - Bent.se, lwd = 1.5,
angle = 90, length = 0.1)
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
Veg = read.table(file = "RBook/Vegetation2.txt", header = TRUE)
names(Veg)
str(Veg)
names(Veg)
View(Veg)
m = mean(Veg$R) #Mean for all richness
Me = tapply(Veg$R, Veg$Transect, mean) #Mean species Richness
Sd = tapply(Veg$R, Veg$Transect, sd) #Standard deviation
Le = tapply(Veg$R, Veg$Transect, length) #Number of observations
cbind(Me, Sd, Le) #Display results
barplot(Me)
barplot(Me,
xlab = "Transect", ylab = "Mean",
col = rainbow(8))
bp = barplot(Me,
xlab = "Transect", ylab = "Mean",
col = rainbow(8))
bp
arrows(bp, Me, bp, Me + Sd, lwd = 1.5, angle = 90, length = 0.1)
bp = barplot(Me, ylim = c(0,16)
xlab = "Transect", ylab = "Mean",
col = rainbow(8))
bp = barplot(Me, ylim = c(0,16),
xlab = "Transect", ylab = "Mean",
col = rainbow(8))
bp
arrows(bp, Me, bp, Me + Sd, lwd = 1.5, angle = 90, length = 0.1)
box()
bp = barplot(Me, ylim = c(0,16),
xlab = "Transect", ylab = "Mean",
col = rainbow(8))
bp
arrows(bp, Me, bp, Me + Sd, lwd = 1.0, angle = 90, length = 0.1)
box()
arrows(bp, Me, bp, Me + Sd, lwd = 1.5, angle = 90, length = 0.1)
bp = barplot(Me, ylim = c(0,16),
xlab = "Transect", ylab = "Mean",
col = rainbow(8))
arrows(bp, Me, bp, Me + Sd, lwd = 1.5, angle = 90, length = 0.5)
arrows(bp, Me, bp, Me + Sd, lwd = 1.5, angle = 90, length = 0.1)
bp = barplot(Me, ylim = c(0,16),
xlab = "Transect", ylab = "Mean",
col = rainbow(8))
bp
arrows(bp, Me, bp, Me + Sd, lwd = 1.5, angle = 90, length = 0.1)
box()
bp = barplot(Me, ylim = c(0,16),
xlab = "Transect", ylab = "Mean", main = "Vegetaion Transect",
col = rainbow(8))
bp
arrows(bp, Me, bp, Me + Sd, lwd = 1.5, angle = 90, length = 0.1)
box()
Veg.se = Sd / sqrt(Le) #Standard Error
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, pch = 1, method = "jitter", jit = 0.05,
xlab = "x", ylab = "y")
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
, pch = 1
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
dev.off
dev.off()
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
points(1:8, Me, pch = 16)
stripchart(Veg$R ~ Veg$Transect, vert = RALSE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
stripchart(Veg$R ~ Veg$Transect, vert = FALSE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, pch = 1, method = "jitter", jit = 0.5,
xlab = "Transect", ylab = "Richness")
stripchart(Veg$R ~ Veg$Transect, vert = TRUE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness")
points(1:8, Me, pch = 16)
arrows(1:8, Me, 1:8, Me + Veg.se, lwd = 1.5, angle = 90, length = 0.1)
arrows(1:8, Me, 1:8, Me - Veg.se, lwd = 1.5, angle = 90, length = 0.1)
stripchart(Veg$R ~ Veg$Transect,
vert = TRUE, pch = 1, method = "jitter", jit = 0.05,
xlab = "Transect", ylab = "Richness",
main = "Standard Error")
points(1:8, Me, pch = 16)
arrows(1:8, Me, 1:8, Me + Veg.se, lwd = 1.5, angle = 90, length = 0.1)
arrows(1:8, Me, 1:8, Me - Veg.se, lwd = 1.5, angle = 90, length = 0.1)
dev.off()
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
#Boxplot
Owls = read.table(file = "RBook/Owls.txt", header = TRUE)
names(Owls)
str(Owls)
boxplot(Owls$NegPerChick)
par(mfrow = c(2,2))
boxplot(NegPerChick ~ SexParent, data = Owls)
boxplot(Owls$NegPerChick ~ Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment,
names = c("F/Dep", "M/Dep", "F/Sat", "M/Sat"))
dev.off()
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment,
names = c("F/Dep", "M/Dep", "F/Sat", "M/Sat"))
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment)
boxplot(NegPerChick ~ SexParent, data = Owls)
boxplot(Owls$NegPerChick ~ Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment,
names = c("F/Dep", "M/Dep", "F/Sat", "M/Sat"))
dev.off()
boxplot(NegPerChick ~ Nest, data = Owls)
dev.off()
dev.off()
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE)
boxplot(NegPerChick ~ Nest, data = Owls)
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE, ylim = c(-3,8.5))
axis(2, at = c(0,2,4,6,8))
text(x = 1.27, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65)
boxplot(NegPerChick ~ Nest, data = Owls)
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE, ylim = c(-3,8.5)) #draw without axes and lower limit
axis(2, at = c(0,2,4,6,8)) #Create the axies
text(x = 1.27, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65)
axis(1, at = c(0,2,4,6,8)) #Create the axies
axis(3, at = c(0,2,4,6,8)) #Create the axies
axis(4, at = c(0,2,4,6,8)) #Create the axies
boxplot(NegPerChick ~ Nest, data = Owls)
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE, ylim = c(-3,8.5)) #draw without axes and lower limit
axis(2, at = c(0,2,4,6,8)) #Create the axes on left(2)
text(x = 1.27, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65)
text(x = 0, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65) #cex - font size, srt - angle
text(x = 1.27, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65) #cex - font size, srt - angle
dev.off()
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE, ylim = c(-3,8.5)) #draw without axes and lower limit
axis(2, at = c(0,2,4,6,8)) #Create the axes on left(2)
text(x = 1.27, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65) #cex - font size, srt - angle
Benthic = read.table(file = "RBook/RIKZ2.txt", header = TRUE)
Benthic.n = tapply(Benthic$Richness, Benthic$Beach, length)
Benthic.n
boxplot(Richness ~ Beach, data = Benthic, col = "grey",
xlab = "Beach", ylab = "Richness")
BP.info = boxplot(Richness ~ Beach, data = Benthic, col = "grey",
xlab = "Beach", ylab = "Richness")
View(BP.info)
View(BP.info)
BP.info$stats
#Obtain midpoints of boxes
BP.midp <- BP.info$stats[2, ] +
(BP.info$stats[4, ] - BP.info$stats[2,]) / 2
BP.info$stats
text(1:9, BP.midp, Bentic.n, col = "white", font = 2)
text(1:9, BP.midp, Benthic.n, col = "white", font = 2)
dev.off()
boxplot(Owls$NegPerChick)
boxplot(NegPerChick ~ SexParent, data = Owls)
boxplot(Owls$NegPerChick ~ Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment,
names = c("F/Dep", "M/Dep", "F/Sat", "M/Sat"))
boxplot(Owls$NegPerChick)
par(mfrow = c(2,2))
boxplot(NegPerChick ~ SexParent, data = Owls)
boxplot(Owls$NegPerChick ~ Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment)
boxplot(Owls$NegPerChick ~ Owls$SexParent * Owls$FoodTreatment,
names = c("F/Dep", "M/Dep", "F/Sat", "M/Sat"))
boxplot(NegPerChick ~ Nest, data = Owls)
boxplot(NegPerChick ~ Nest, data = Owls)
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE, ylim = c(-3,8.5)) #draw without axes and lower limit
axis(2, at = c(0,2,4,6,8)) #Create the axes on left(2)
text(x = 1.27, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65) #cex - font size, srt - angle
boxplot(NegPerChick ~ Nest, data = Owls)
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE, ylim = c(-3,8.5)) #draw without axes and lower limit
axis(2, at = c(0,2,4,6,8)) #Create the axes on left(2)
Benthic.n = tapply(Benthic$Richness, Benthic$Beach, length) #Observations per beach
Benthic.n
boxplot(Richness ~ Beach, data = Benthic, col = "grey",
xlab = "Beach", ylab = "Richness")
#Create the info of the graph which can be used to position graphics on the plot
BP.info = boxplot(Richness ~ Beach,
data = Benthic, col = "grey",
xlab = "Beach", ylab = "Richness")
BP.info$stats
#Obtain midpoints of boxes
BP.midp <- BP.info$stats[2, ] +
(BP.info$stats[4, ] - BP.info$stats[2,]) / 2
text(1:9, BP.midp, Benthic.n, col = "white", font = 2)
str(Owls)
boxplot(NegPerChick ~ Nest, data = Owls)
boxplot(NegPerChick ~ Nest, data = Owls,
axes = FALSE, ylim = c(-3,8.5)) #draw without axes and lower limit
axis(2, at = c(0,2,4,6,8)) #Create the axes on left(2)
text(1:27, x = 1.27, y = -2, labels = levels(Owls$Nest), cex = 0.75, srt = 65) #cex - font size, srt - angle
boxplot(Richness ~ Beach, data = Benthic, col = "grey",
xlab = "Beach", ylab = "Richness")
#Create the info of the graph which can be used to position graphics on the plot
BP.info = boxplot(Richness ~ Beach,
data = Benthic, col = "grey",
xlab = "Beach", ylab = "Richness")
BP.info$stats
#Obtain midpoints of boxes
BP.midp <- BP.info$stats[2, ] +
(BP.info$stats[4, ] - BP.info$stats[2,]) / 2
text(1:9, BP.midp, Benthic.n, col = "white", font = 2)
#setwd("/home/diego/Learning/LearningR") #Laptop
#setwd("/home/valdeslab/Learning/LearningR") #GreenMachine
rm(list = ls()) #clear environment
Veg = read.table(file = "RBook/Vegetation2.txt", header = TRUE)
names(Veg)
str(Veg)
boxplot(Veg$R)
boxplot(Veg$R, main = "Richness")
Parasite = read.table(file = "RBook/CodParasite.txt", header = TRUE)
names(Parasite)
str(Parasite)
View(Parasite)
boxplot(Intensity ~ Area, data = Parasite)
boxplot(Intensity ~ Sex, data = Parasite)
boxplot(Intensity ~ Stage, data = Parasite)
boxplot(Intensity ~ Year, data = Parasite)
boxplot(Intensity ~ Area * Sex, data = Parasite)
boxplot(Intensity ~ Area * Year, data = Parasite)
boxplot(Intensity ~ Sex * Year, data = Parasite)
boxplot(Intensity ~ Area * Stage, data = Parasite)
boxplot(Intensity ~ Sex * Stage, data = Parasite)
boxplot(Intensity ~ Stage * Year, data = Parasite)
boxplot(Intensity ~ Area, data = Parasite)
boxplot(Intensity ~ Sex, data = Parasite)
boxplot(Intensity ~ Stage, data = Parasite)
boxplot(Intensity ~ Year, data = Parasite)
boxplot(Intensity ~ Area, data = Parasite)
boxplot(Intensity ~ Sex, data = Parasite)
boxplot(Intensity ~ Year, data = Parasite)
boxplot(Intensity ~ Stage, data = Parasite)
boxplot(Intensity ~ Area * Sex, data = Parasite)
boxplot(Intensity ~ Area * Year, data = Parasite)
boxplot(Intensity ~ Area * Stage, data = Parasite)
boxplot(Intensity ~ Sex * Year, data = Parasite)
boxplot(Intensity ~ Sex * Stage, data = Parasite)
boxplot(Intensity ~ Stage * Year, data = Parasite)
boxplot(Intensity ~ Area, data = Parasite)
boxplot(Intensity ~ Area * Sex, data = Parasite)
boxplot(Intensity ~ Area, data = Parasite) #In answers
boxplot(Intensity ~ Area * Sex, data = Parasite) #In answers
boxplot(Intensity ~ Area * Sex, data = Parasite, ylim = c(0,100)) #In answers
